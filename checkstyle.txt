Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
Starting audit...
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:16:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:75:5: Method length is 173 lines (max allowed is 150). [MethodLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:115:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:140: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:195: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:8:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:9:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:10:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:13:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:25:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:29:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:29:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:33:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:37:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:37:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:41:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:45:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:45:29: Parameter gamesWon should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:49:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:53:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:53:32: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:57:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeckList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeckList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:61:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeckList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeckList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:61:29: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:61:38: 'decks' hides a field. [HiddenField]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:65:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:69:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:69:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:73:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:77:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:77:25: Parameter hand should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:81:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:85:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:85:32: Parameter currentDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:89:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:93:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:93:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:97:19: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:97:37: Parameter id should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:106:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'drawCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'drawCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:113:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:113:26: Parameter HandIndex should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:113:30: Name 'HandIndex' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:113:41: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:123:31: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:132:56: '5' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:15:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:19:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:19:26: Parameter cards should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:23:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:27:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:27:25: Parameter size should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:35:17: Parameter cards should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:44:17: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:44:33: Parameter index should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:50:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:57:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:57:25: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:62:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'printDeckJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'printDeckJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:62:31: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:62:58: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:3:8: Unused import - Cards.Card. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:14:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:18:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:18:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:22:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:26:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:26:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:30:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:34:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:34:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:38:21: Parameter decksInput should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:3:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:4:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:5:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:8:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:11:17: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:13:19: '30' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:21:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:25:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:25:25: Parameter tank should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:29:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:33:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:33:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:37:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:41:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:41:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:45:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:49:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:49:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:53:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:57:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:57:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:61:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:65:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:65:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:69:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:73:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:73:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:77:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:81:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:81:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:85:17: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:93: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:96:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'printCardJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'printCardJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:96:37: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:96:60: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:103:19: 'colors' hides a field. [HiddenField]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:8:24: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:12:27: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:12:28: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:10:9: Variable 'manaPerRound' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:15:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getManaPerRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getManaPerRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:19:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setManaPerRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setManaPerRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:19:33: Parameter manaPerRound should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:23:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTurnsThisRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTurnsThisRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:27:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setTurnsThisRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setTurnsThisRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:27:35: Parameter turnsThisRound should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:31:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:35:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:35:26: Parameter round should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:39:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCurrentPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCurrentPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:43:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setCurrentPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setCurrentPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:43:38: Parameter currentPlayerTurn should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:47:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getBoard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getBoard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:51:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setBoard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setBoard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:51:26: Parameter board should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:55:17: Parameter startingPlayerTurn should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:61:29: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:66:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'switchTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'switchTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:71:40: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:87:32: '10' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:97:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'PlayerOneWin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'PlayerOneWin' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:97:17: Name 'PlayerOneWin' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:97:30: Parameter playerOne should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:97:48: Parameter playerTwo should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:103:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'PlayerTwoWin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'PlayerTwoWin' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:103:17: Name 'PlayerTwoWin' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:103:30: Parameter playerOne should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:103:48: Parameter playerTwo should be final. [FinalParameters]
Audit done.
Checkstyle ends with 158 errors.
