Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
Starting audit...
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:3:8: Unused import - Deck.Decks. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:10:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:11:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:12:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:16:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:16:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:20:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:24:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:24:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:28:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:32:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:32:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:36:18: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:36:37: Parameter nrDecks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:36:50: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:14:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:18:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:18:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:22:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:26:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:26:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:30:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:34:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:34:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:38:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:42:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:42:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:46:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:50:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:50:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:54:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:58:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:58:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:62:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:66:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:66:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:19: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:29: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:41: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:59: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:79: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:70:105: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:35: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:47: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:65: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:85: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:6:111: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:10:5: Class 'SpecialCards' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SpecialCards' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCards.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 55 errors.
