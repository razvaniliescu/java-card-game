Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
Starting audit...
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:3:8: Unused import - Cards.Card. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:5:8: Unused import - Deck.Decks. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:15:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:95: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:96: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:111:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:115: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:117: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:123: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:125: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:9:8: Unused import - fileio.CardInput. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:11:8: Unused import - fileio.StartGameInput. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:23:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:27:29: Parameter gamesWon should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:35:32: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:43:25: Parameter hand should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:51:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:55:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:59:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:59:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:63:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:67:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:67:32: Parameter currentDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:71:19: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:76:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'drawCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'drawCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'printCurrentJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'printCurrentJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82:34: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82:61: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Player/Player.java:82:84: Parameter currentDeckOrHand should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:4:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:5:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:6:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:17:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:21:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:21:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:25:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:29:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:29:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:33:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:37:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:37:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:41:18: Parameter decksInput should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Decks.java:48: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Board/Board.java:1:9: Name 'Board' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Board/Board.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:8:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:11:17: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:12: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:12:31: '30' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:15:5: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'printHeroJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'printHeroJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:15:31: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:15:54: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:14:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:18:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:18:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:22:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:26:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:26:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:30:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:34:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:34:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:38:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:42:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:42:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:46:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:50:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:50:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:54:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:58:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:58:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:62:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:66:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:66:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:17: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:39: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:57: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:77: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:70:103: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:24: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:34: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:46: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:64: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:84: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:6:110: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:10:27: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialCard.java:10:28: '}' is not preceded with whitespace. [WhitespaceAround]
Audit done.
Checkstyle ends with 106 errors.
