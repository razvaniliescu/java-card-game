Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
Starting audit...
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:3:8: Unused import - Cards.Card. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:9:8: Unused import - Cards.Minion. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:19:8: Unused import - com.fasterxml.jackson.databind.SerializationFeature. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:23:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:82:5: Method length is 173 lines (max allowed is 150). [MethodLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:110:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:111: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:113: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:115: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:117: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:121:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:122: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:124: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:126: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:128: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:144: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:145: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:160:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:185: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/main/Main.java:193: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Output.java:1:9: Name 'Output' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Output.java:7:15: Variable 'output' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Output.java:8:18: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Output.java:10:19: Parameter output should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Output.java:10:37: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:1:9: Name 'Output' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:9:18: Parameter output should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:9:36: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:13:5: Class 'Error' looks like designed for extension (can be subclassed), but the method 'placeCardError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Error' final or making the method 'placeCardError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:13:32: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:13:55: Parameter error should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:13:66: Parameter handIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:16:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:5: Class 'Error' looks like designed for extension (can be subclassed), but the method 'cardUsesAttackError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Error' final or making the method 'cardUsesAttackError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:37: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:60: Parameter error should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:71: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:25:99: Parameter attackedCoords should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:35:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:40:18: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:42:18: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:5: Class 'Error' looks like designed for extension (can be subclassed), but the method 'cardUsesAbilityError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Error' final or making the method 'cardUsesAbilityError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:38: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:61: Parameter error should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:72: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:48:100: Parameter attackedCoords should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:58:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:63:18: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:65:18: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:67:18: '5' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:73:5: Class 'Error' looks like designed for extension (can be subclassed), but the method 'useAttackHeroError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Error' final or making the method 'useAttackHeroError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:73:36: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:73:59: Parameter error should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:73:70: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:79:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:84:18: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:90:5: Class 'Error' looks like designed for extension (can be subclassed), but the method 'useHeroAbilityError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Error' final or making the method 'useHeroAbilityError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:90:37: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:90:60: Parameter error should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:90:71: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:93:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:98:18: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Error.java:100:18: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:1:9: Name 'Output' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:9:8: Unused import - fileio.Coordinates. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:15:18: Parameter output should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:15:36: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:19:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:19:31: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:19:54: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:19:69: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:30:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:30:32: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:30:55: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:30:70: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:41:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:41:33: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:41:56: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:41:71: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:56:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:56:31: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:56:54: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:56:69: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getCardAtPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getCardAtPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:35: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:58: Parameter x should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:65: Parameter y should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:67:72: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:80:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:80:31: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:80:54: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:86:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:86:31: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:86:54: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:86:69: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:98:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getFrozenCardsOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getFrozenCardsOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:98:39: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:98:62: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:113:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getTotalGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getTotalGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:113:37: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:113:60: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:119:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerOneWins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerOneWins' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:119:34: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:119:57: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:125:5: Class 'Debug' looks like designed for extension (can be subclassed), but the method 'getPlayerTwoWins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Debug' final or making the method 'getPlayerTwoWins' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:125:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:125:34: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Output/Debug.java:125:57: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:3:13: Using the '.*' form of import should be avoided - Cards.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:19:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:23:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:23:26: Parameter cards should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:27:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'getSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'getSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:31:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'setSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'setSize' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:31:25: Parameter size should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:39:17: Parameter cards should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:39:45: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:43:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:60:14: Empty statement. [EmptyStatement]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:66:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:73:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:73:25: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:78:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'printDeckJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'printDeckJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:78:31: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/Deck.java:78:58: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:1:9: Name 'Deck' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:3:8: Unused import - Cards.Card. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:14:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:18:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:18:34: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:22:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:26:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:26:28: Parameter nrDecks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:30:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:34:5: Class 'DeckList' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DeckList' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:34:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:38:21: Parameter decksInput should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Deck/DeckList.java:38:44: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:8:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'isFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'isFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:12:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'setFrontRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'setFrontRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:12:29: Parameter frontRow should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:16:19: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:16:35: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:21:5: Class 'Minion' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minion' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Minion.java:21:24: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:1:9: Name 'Cards.SpecialMinions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:8:22: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:8:38: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:13:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheRipper.java:13:25: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:1:9: Name 'Cards.SpecialMinions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:8:18: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:8:34: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:13:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Miraj.java:13:25: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:1:9: Name 'Cards.SpecialMinions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:8:25: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:8:41: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:13:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/TheCursedOne.java:13:25: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:1:9: Name 'Cards.SpecialMinions' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:8:21: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:8:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:13:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinions/Disciple.java:13:25: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Tank.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Tank.java:6:17: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Tank.java:6:33: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:8:17: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:8:33: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:10:19: '30' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:13:25: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:13:48: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Hero.java:13:49: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:10:8: Unused import - java.util.Objects. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:23:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'hasAttackedThisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'hasAttackedThisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:27:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackedThisTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackedThisTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:27:37: Parameter hasAttackedThisTurn should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:31:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:35:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:35:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:39:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:43:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:43:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:47:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:51:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:51:27: Parameter health should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:55:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:59:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:59:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:63:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:67:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:67:32: Parameter description should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:71:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:75:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:75:27: Parameter colors should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:79:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:83:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:83:25: Parameter name should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:87:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:91:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:91:27: Parameter frozen should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:95:17: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:95:33: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:106:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'printCardJSON' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'printCardJSON' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:106:37: Parameter objectNode should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:106:60: Parameter objectMapper should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Card.java:113:19: 'colors' hides a field. [HiddenField]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:4:8: Unused import - fileio.Coordinates. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:8:26: Parameter card should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:8:42: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:12:25: Parameter target should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:12:40: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/SpecialMinion.java:12:41: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:1:9: Name 'Cards.Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:10:27: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:10:43: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:14:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/EmpressThorina.java:14:25: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:1:9: Name 'Cards.Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:10:22: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:10:38: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:14:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/LordRoyce.java:14:25: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:1:9: Name 'Cards.Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:10:24: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:10:40: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:14:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/KingMudface.java:14:25: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:1:9: Name 'Cards.Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:10:28: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:10:44: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:14:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'ability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'ability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Cards/Heroes/GeneralKocioraw.java:14:25: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:3:13: Using the '.*' form of import should be avoided - Cards.*. [AvoidStarImport]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:10:8: Unused import - lombok.Getter. [UnusedImports]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:15:9: Variable 'manaPerRound' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:22:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getBoard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getBoard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:26:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getManaPerRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getManaPerRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:30:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getCurrentPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getCurrentPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:34:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTurnsThisRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTurnsThisRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:38:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerOne' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerOne' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:42:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerTwo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerTwo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:46:17: Parameter startingPlayerTurn should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:46:41: Parameter playerOne should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:46:59: Parameter playerTwo should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:51:29: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:58:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'switchTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'switchTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:64:42: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:84:32: '10' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:94:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'checkForTanks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'checkForTanks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:94:34: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:111:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'useAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'useAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:111:26: Parameter cardAttacker should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:111:52: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:127:20: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:130:20: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:139:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:139:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:139:27: Parameter cardAttacker should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:139:53: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:143: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:156:24: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:160:24: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:163:24: '5' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:174:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'attackHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'attackHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:174:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:174:27: Parameter cardAttacker should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:200:28: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:218:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:218:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:218:31: Parameter row should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:235:40: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:236:28: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:240:28: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:246:28: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:249:40: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Game.java:250:28: '4' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:19:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:23:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:23:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:31:25: Parameter mana should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesWon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesWon' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:39:29: Parameter gamesWon should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setGamesPlayed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setGamesPlayed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:47:32: Parameter gamesPlayed should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeckList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeckList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:55:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeckList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeckList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:55:29: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:55:38: 'decks' hides a field. [HiddenField]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:59:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:63:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:63:25: Parameter hero should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:67:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:71:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:71:25: Parameter hand should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:75:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:79:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setCurrentDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setCurrentDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:79:32: Parameter currentDeck should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:83:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:87:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:87:26: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:91:19: Parameter decks should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:91:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:100:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'drawCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'drawCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:107:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:107:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:107:26: Parameter HandIndex should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:107:30: Name 'HandIndex' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:107:41: Parameter game should be final. [FinalParameters]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:117:31: '3' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:126:56: '5' is a magic number. [MagicNumber]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:137:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:137:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:142:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'lose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'lose' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/razvanica/Anu2/Sem1/POO/tema0/./src/Game/Player.java:142:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 364 errors.
